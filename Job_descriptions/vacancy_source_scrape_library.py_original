file = "vacancy_source_scrape_library.py"
test=True
if test==True:
    new_file = file + "_test"
else:
    new_file = file


#for test not true need previous versions saved functionality
#when identifies possible format, keeps a log of the output in some log file
def scrape(url,soup):
    job_unavailable_check = ""
    if url.find("indeed.co.uk") != -1:
        job_description = soup.find("div", {"class":"jobsearch-jobDescriptionText"}).getText()   
        try: 
            job_unavailable_check = soup.find('h3', {"class":"icl-Alert-headline"}).getText()
        except:
            pass
    elif url.find("linkedin.com") != -1:
        job_description = soup.find('div', {"class":{"description__text description__text--rich"}})
        job_unavailable_check = soup.find('span', {"class":"inline-notification__text"}).getText()        
    
    elif url.find("irishjobs") != -1:
        job_description = soup.find('div', {"class": "job-details"})
        try:    
            job_unavailable_check = soup.find('p', {"class":{"expiredClass alert-expired"}}).getText()
        except:
            pass
    elif url.find("cityjobs") != -1: #Totaljobs
        job_description = soup.find('div', {"id":"job-description"})
        
    elif url.find("workinstartups") != -1:
        job_description = soup.find('div', {"id":"job-description"})
        
    elif url.find("independentjobs") != -1:
        job_description = soup.find('div', {"class":"block fix-text job-description"})
        try:
            job_unavailable_check = soup.find('p', {"class":"message message--warning icon-before"}).getText()
        except:
            pass
    elif url.find("simplyhired") != -1:
        job_description = soup.find('div', {"class":{"viewjob-description ViewJob-description"}})
    
    elif url.find("jobstoday") != -1:
        job_description = soup.find('div', {"class":"block fix-text job-description"})
        try:
            job_unavailable_check = soup.find('p', {"class":"message message--warning icon-before"}).getText()
        except:
            pass
    elif url.find("leaps.emid") != -1:
        job_description = soup.find('div', {"class":"job_description"})
        
    elif url.find("postjobsfree") != -1:
        job_description = soup.find('div', {"id":"descriptionDiv"})
            
    elif url.find("totaljobs") != -1:
        job_description = soup.find('div', {"class":"job-description"})
    
    else:
        print("found new vacancty source - ", url)
        content = []
        with open(file,"r") as f:
            for line in f:
                if line.find("else") != -1:
                    content.append( """hiiiiielif url.find("totaljobs") != -1:\n\tjob_description = soup.find('div', {"class":"job-description"})"""
                    )
                content.append(line)

        with open(new_file,"w") as f:
            
            for i in range(len(content)):
                f.write(content[i])
        raise Exception()    

    return job_description, job_unavailable_check